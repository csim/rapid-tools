//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1434
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.42.
// 


namespace Rapid.Tools.SPDeploy.AddIn.Proxies.Webs
{
	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[System.Web.Services.WebServiceBindingAttribute(Name = "WebsSoap", Namespace = "http://schemas.microsoft.com/sharepoint/soap/")]
	public partial class WebsWebService : System.Web.Services.Protocols.SoapHttpClientProtocol
	{

		private System.Threading.SendOrPostCallback GetWebCollectionOperationCompleted;

		private System.Threading.SendOrPostCallback GetWebOperationCompleted;

		private System.Threading.SendOrPostCallback GetListTemplatesOperationCompleted;

		private System.Threading.SendOrPostCallback GetAllSubWebCollectionOperationCompleted;

		private System.Threading.SendOrPostCallback WebUrlFromPageUrlOperationCompleted;

		private System.Threading.SendOrPostCallback GetContentTypesOperationCompleted;

		private System.Threading.SendOrPostCallback GetContentTypeOperationCompleted;

		private System.Threading.SendOrPostCallback CreateContentTypeOperationCompleted;

		private System.Threading.SendOrPostCallback UpdateContentTypeOperationCompleted;

		private System.Threading.SendOrPostCallback DeleteContentTypeOperationCompleted;

		private System.Threading.SendOrPostCallback UpdateContentTypeXmlDocumentOperationCompleted;

		private System.Threading.SendOrPostCallback RemoveContentTypeXmlDocumentOperationCompleted;

		private System.Threading.SendOrPostCallback GetColumnsOperationCompleted;

		private System.Threading.SendOrPostCallback UpdateColumnsOperationCompleted;

		private System.Threading.SendOrPostCallback GetCustomizedPageStatusOperationCompleted;

		private System.Threading.SendOrPostCallback RevertFileContentStreamOperationCompleted;

		private System.Threading.SendOrPostCallback RevertAllFileContentStreamsOperationCompleted;

		private System.Threading.SendOrPostCallback CustomizeCssOperationCompleted;

		private System.Threading.SendOrPostCallback RevertCssOperationCompleted;

		private System.Threading.SendOrPostCallback GetActivatedFeaturesOperationCompleted;

		/// <remarks/>
		public WebsWebService()
		{
		}

		/// <remarks/>
		public event GetWebCollectionCompletedEventHandler GetWebCollectionCompleted;

		/// <remarks/>
		public event GetWebCompletedEventHandler GetWebCompleted;

		/// <remarks/>
		public event GetListTemplatesCompletedEventHandler GetListTemplatesCompleted;

		/// <remarks/>
		public event GetAllSubWebCollectionCompletedEventHandler GetAllSubWebCollectionCompleted;

		/// <remarks/>
		public event WebUrlFromPageUrlCompletedEventHandler WebUrlFromPageUrlCompleted;

		/// <remarks/>
		public event GetContentTypesCompletedEventHandler GetContentTypesCompleted;

		/// <remarks/>
		public event GetContentTypeCompletedEventHandler GetContentTypeCompleted;

		/// <remarks/>
		public event CreateContentTypeCompletedEventHandler CreateContentTypeCompleted;

		/// <remarks/>
		public event UpdateContentTypeCompletedEventHandler UpdateContentTypeCompleted;

		/// <remarks/>
		public event DeleteContentTypeCompletedEventHandler DeleteContentTypeCompleted;

		/// <remarks/>
		public event UpdateContentTypeXmlDocumentCompletedEventHandler UpdateContentTypeXmlDocumentCompleted;

		/// <remarks/>
		public event RemoveContentTypeXmlDocumentCompletedEventHandler RemoveContentTypeXmlDocumentCompleted;

		/// <remarks/>
		public event GetColumnsCompletedEventHandler GetColumnsCompleted;

		/// <remarks/>
		public event UpdateColumnsCompletedEventHandler UpdateColumnsCompleted;

		/// <remarks/>
		public event GetCustomizedPageStatusCompletedEventHandler GetCustomizedPageStatusCompleted;

		/// <remarks/>
		public event RevertFileContentStreamCompletedEventHandler RevertFileContentStreamCompleted;

		/// <remarks/>
		public event RevertAllFileContentStreamsCompletedEventHandler RevertAllFileContentStreamsCompleted;

		/// <remarks/>
		public event CustomizeCssCompletedEventHandler CustomizeCssCompleted;

		/// <remarks/>
		public event RevertCssCompletedEventHandler RevertCssCompleted;

		/// <remarks/>
		public event GetActivatedFeaturesCompletedEventHandler GetActivatedFeaturesCompleted;

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/GetWebCollection", RequestNamespace = "http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace = "http://schemas.microsoft.com/sharepoint/soap/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public System.Xml.XmlNode GetWebCollection()
		{
			object[] results = this.Invoke("GetWebCollection", new object[0]);
			return ((System.Xml.XmlNode)(results[0]));
		}

		/// <remarks/>
		public System.IAsyncResult BeginGetWebCollection(System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("GetWebCollection", new object[0], callback, asyncState);
		}

		/// <remarks/>
		public System.Xml.XmlNode EndGetWebCollection(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((System.Xml.XmlNode)(results[0]));
		}

		/// <remarks/>
		public void GetWebCollectionAsync()
		{
			this.GetWebCollectionAsync(null);
		}

		/// <remarks/>
		public void GetWebCollectionAsync(object userState)
		{
			if ((this.GetWebCollectionOperationCompleted == null))
			{
				this.GetWebCollectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWebCollectionOperationCompleted);
			}
			this.InvokeAsync("GetWebCollection", new object[0], this.GetWebCollectionOperationCompleted, userState);
		}

		private void OnGetWebCollectionOperationCompleted(object arg)
		{
			if ((this.GetWebCollectionCompleted != null))
			{
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
				this.GetWebCollectionCompleted(this, new GetWebCollectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/GetWeb", RequestNamespace = "http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace = "http://schemas.microsoft.com/sharepoint/soap/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public System.Xml.XmlNode GetWeb(string webUrl)
		{
			object[] results = this.Invoke("GetWeb", new object[] {
                    webUrl});
			return ((System.Xml.XmlNode)(results[0]));
		}

		/// <remarks/>
		public System.IAsyncResult BeginGetWeb(string webUrl, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("GetWeb", new object[] {
                    webUrl}, callback, asyncState);
		}

		/// <remarks/>
		public System.Xml.XmlNode EndGetWeb(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((System.Xml.XmlNode)(results[0]));
		}

		/// <remarks/>
		public void GetWebAsync(string webUrl)
		{
			this.GetWebAsync(webUrl, null);
		}

		/// <remarks/>
		public void GetWebAsync(string webUrl, object userState)
		{
			if ((this.GetWebOperationCompleted == null))
			{
				this.GetWebOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWebOperationCompleted);
			}
			this.InvokeAsync("GetWeb", new object[] {
                    webUrl}, this.GetWebOperationCompleted, userState);
		}

		private void OnGetWebOperationCompleted(object arg)
		{
			if ((this.GetWebCompleted != null))
			{
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
				this.GetWebCompleted(this, new GetWebCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/GetListTemplates", RequestNamespace = "http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace = "http://schemas.microsoft.com/sharepoint/soap/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public System.Xml.XmlNode GetListTemplates()
		{
			object[] results = this.Invoke("GetListTemplates", new object[0]);
			return ((System.Xml.XmlNode)(results[0]));
		}

		/// <remarks/>
		public System.IAsyncResult BeginGetListTemplates(System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("GetListTemplates", new object[0], callback, asyncState);
		}

		/// <remarks/>
		public System.Xml.XmlNode EndGetListTemplates(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((System.Xml.XmlNode)(results[0]));
		}

		/// <remarks/>
		public void GetListTemplatesAsync()
		{
			this.GetListTemplatesAsync(null);
		}

		/// <remarks/>
		public void GetListTemplatesAsync(object userState)
		{
			if ((this.GetListTemplatesOperationCompleted == null))
			{
				this.GetListTemplatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListTemplatesOperationCompleted);
			}
			this.InvokeAsync("GetListTemplates", new object[0], this.GetListTemplatesOperationCompleted, userState);
		}

		private void OnGetListTemplatesOperationCompleted(object arg)
		{
			if ((this.GetListTemplatesCompleted != null))
			{
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
				this.GetListTemplatesCompleted(this, new GetListTemplatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/GetAllSubWebCollection", RequestNamespace = "http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace = "http://schemas.microsoft.com/sharepoint/soap/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public System.Xml.XmlNode GetAllSubWebCollection()
		{
			object[] results = this.Invoke("GetAllSubWebCollection", new object[0]);
			return ((System.Xml.XmlNode)(results[0]));
		}

		/// <remarks/>
		public System.IAsyncResult BeginGetAllSubWebCollection(System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("GetAllSubWebCollection", new object[0], callback, asyncState);
		}

		/// <remarks/>
		public System.Xml.XmlNode EndGetAllSubWebCollection(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((System.Xml.XmlNode)(results[0]));
		}

		/// <remarks/>
		public void GetAllSubWebCollectionAsync()
		{
			this.GetAllSubWebCollectionAsync(null);
		}

		/// <remarks/>
		public void GetAllSubWebCollectionAsync(object userState)
		{
			if ((this.GetAllSubWebCollectionOperationCompleted == null))
			{
				this.GetAllSubWebCollectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllSubWebCollectionOperationCompleted);
			}
			this.InvokeAsync("GetAllSubWebCollection", new object[0], this.GetAllSubWebCollectionOperationCompleted, userState);
		}

		private void OnGetAllSubWebCollectionOperationCompleted(object arg)
		{
			if ((this.GetAllSubWebCollectionCompleted != null))
			{
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
				this.GetAllSubWebCollectionCompleted(this, new GetAllSubWebCollectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/WebUrlFromPageUrl", RequestNamespace = "http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace = "http://schemas.microsoft.com/sharepoint/soap/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public string WebUrlFromPageUrl(string pageUrl)
		{
			object[] results = this.Invoke("WebUrlFromPageUrl", new object[] {
                    pageUrl});
			return ((string)(results[0]));
		}

		/// <remarks/>
		public System.IAsyncResult BeginWebUrlFromPageUrl(string pageUrl, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("WebUrlFromPageUrl", new object[] {
                    pageUrl}, callback, asyncState);
		}

		/// <remarks/>
		public string EndWebUrlFromPageUrl(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((string)(results[0]));
		}

		/// <remarks/>
		public void WebUrlFromPageUrlAsync(string pageUrl)
		{
			this.WebUrlFromPageUrlAsync(pageUrl, null);
		}

		/// <remarks/>
		public void WebUrlFromPageUrlAsync(string pageUrl, object userState)
		{
			if ((this.WebUrlFromPageUrlOperationCompleted == null))
			{
				this.WebUrlFromPageUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWebUrlFromPageUrlOperationCompleted);
			}
			this.InvokeAsync("WebUrlFromPageUrl", new object[] {
                    pageUrl}, this.WebUrlFromPageUrlOperationCompleted, userState);
		}

		private void OnWebUrlFromPageUrlOperationCompleted(object arg)
		{
			if ((this.WebUrlFromPageUrlCompleted != null))
			{
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
				this.WebUrlFromPageUrlCompleted(this, new WebUrlFromPageUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/GetContentTypes", RequestNamespace = "http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace = "http://schemas.microsoft.com/sharepoint/soap/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public System.Xml.XmlNode GetContentTypes()
		{
			object[] results = this.Invoke("GetContentTypes", new object[0]);
			return ((System.Xml.XmlNode)(results[0]));
		}

		/// <remarks/>
		public System.IAsyncResult BeginGetContentTypes(System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("GetContentTypes", new object[0], callback, asyncState);
		}

		/// <remarks/>
		public System.Xml.XmlNode EndGetContentTypes(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((System.Xml.XmlNode)(results[0]));
		}

		/// <remarks/>
		public void GetContentTypesAsync()
		{
			this.GetContentTypesAsync(null);
		}

		/// <remarks/>
		public void GetContentTypesAsync(object userState)
		{
			if ((this.GetContentTypesOperationCompleted == null))
			{
				this.GetContentTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContentTypesOperationCompleted);
			}
			this.InvokeAsync("GetContentTypes", new object[0], this.GetContentTypesOperationCompleted, userState);
		}

		private void OnGetContentTypesOperationCompleted(object arg)
		{
			if ((this.GetContentTypesCompleted != null))
			{
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
				this.GetContentTypesCompleted(this, new GetContentTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/GetContentType", RequestNamespace = "http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace = "http://schemas.microsoft.com/sharepoint/soap/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public System.Xml.XmlNode GetContentType(string contentTypeId)
		{
			object[] results = this.Invoke("GetContentType", new object[] {
                    contentTypeId});
			return ((System.Xml.XmlNode)(results[0]));
		}

		/// <remarks/>
		public System.IAsyncResult BeginGetContentType(string contentTypeId, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("GetContentType", new object[] {
                    contentTypeId}, callback, asyncState);
		}

		/// <remarks/>
		public System.Xml.XmlNode EndGetContentType(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((System.Xml.XmlNode)(results[0]));
		}

		/// <remarks/>
		public void GetContentTypeAsync(string contentTypeId)
		{
			this.GetContentTypeAsync(contentTypeId, null);
		}

		/// <remarks/>
		public void GetContentTypeAsync(string contentTypeId, object userState)
		{
			if ((this.GetContentTypeOperationCompleted == null))
			{
				this.GetContentTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContentTypeOperationCompleted);
			}
			this.InvokeAsync("GetContentType", new object[] {
                    contentTypeId}, this.GetContentTypeOperationCompleted, userState);
		}

		private void OnGetContentTypeOperationCompleted(object arg)
		{
			if ((this.GetContentTypeCompleted != null))
			{
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
				this.GetContentTypeCompleted(this, new GetContentTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/CreateContentType", RequestNamespace = "http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace = "http://schemas.microsoft.com/sharepoint/soap/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public string CreateContentType(string displayName, string parentType, System.Xml.XmlNode newFields, System.Xml.XmlNode contentTypeProperties)
		{
			object[] results = this.Invoke("CreateContentType", new object[] {
                    displayName,
                    parentType,
                    newFields,
                    contentTypeProperties});
			return ((string)(results[0]));
		}

		/// <remarks/>
		public System.IAsyncResult BeginCreateContentType(string displayName, string parentType, System.Xml.XmlNode newFields, System.Xml.XmlNode contentTypeProperties, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("CreateContentType", new object[] {
                    displayName,
                    parentType,
                    newFields,
                    contentTypeProperties}, callback, asyncState);
		}

		/// <remarks/>
		public string EndCreateContentType(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((string)(results[0]));
		}

		/// <remarks/>
		public void CreateContentTypeAsync(string displayName, string parentType, System.Xml.XmlNode newFields, System.Xml.XmlNode contentTypeProperties)
		{
			this.CreateContentTypeAsync(displayName, parentType, newFields, contentTypeProperties, null);
		}

		/// <remarks/>
		public void CreateContentTypeAsync(string displayName, string parentType, System.Xml.XmlNode newFields, System.Xml.XmlNode contentTypeProperties, object userState)
		{
			if ((this.CreateContentTypeOperationCompleted == null))
			{
				this.CreateContentTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateContentTypeOperationCompleted);
			}
			this.InvokeAsync("CreateContentType", new object[] {
                    displayName,
                    parentType,
                    newFields,
                    contentTypeProperties}, this.CreateContentTypeOperationCompleted, userState);
		}

		private void OnCreateContentTypeOperationCompleted(object arg)
		{
			if ((this.CreateContentTypeCompleted != null))
			{
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
				this.CreateContentTypeCompleted(this, new CreateContentTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/UpdateContentType", RequestNamespace = "http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace = "http://schemas.microsoft.com/sharepoint/soap/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public System.Xml.XmlNode UpdateContentType(string contentTypeId, System.Xml.XmlNode contentTypeProperties, System.Xml.XmlNode newFields, System.Xml.XmlNode updateFields, System.Xml.XmlNode deleteFields)
		{
			object[] results = this.Invoke("UpdateContentType", new object[] {
                    contentTypeId,
                    contentTypeProperties,
                    newFields,
                    updateFields,
                    deleteFields});
			return ((System.Xml.XmlNode)(results[0]));
		}

		/// <remarks/>
		public System.IAsyncResult BeginUpdateContentType(string contentTypeId, System.Xml.XmlNode contentTypeProperties, System.Xml.XmlNode newFields, System.Xml.XmlNode updateFields, System.Xml.XmlNode deleteFields, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("UpdateContentType", new object[] {
                    contentTypeId,
                    contentTypeProperties,
                    newFields,
                    updateFields,
                    deleteFields}, callback, asyncState);
		}

		/// <remarks/>
		public System.Xml.XmlNode EndUpdateContentType(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((System.Xml.XmlNode)(results[0]));
		}

		/// <remarks/>
		public void UpdateContentTypeAsync(string contentTypeId, System.Xml.XmlNode contentTypeProperties, System.Xml.XmlNode newFields, System.Xml.XmlNode updateFields, System.Xml.XmlNode deleteFields)
		{
			this.UpdateContentTypeAsync(contentTypeId, contentTypeProperties, newFields, updateFields, deleteFields, null);
		}

		/// <remarks/>
		public void UpdateContentTypeAsync(string contentTypeId, System.Xml.XmlNode contentTypeProperties, System.Xml.XmlNode newFields, System.Xml.XmlNode updateFields, System.Xml.XmlNode deleteFields, object userState)
		{
			if ((this.UpdateContentTypeOperationCompleted == null))
			{
				this.UpdateContentTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateContentTypeOperationCompleted);
			}
			this.InvokeAsync("UpdateContentType", new object[] {
                    contentTypeId,
                    contentTypeProperties,
                    newFields,
                    updateFields,
                    deleteFields}, this.UpdateContentTypeOperationCompleted, userState);
		}

		private void OnUpdateContentTypeOperationCompleted(object arg)
		{
			if ((this.UpdateContentTypeCompleted != null))
			{
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
				this.UpdateContentTypeCompleted(this, new UpdateContentTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/DeleteContentType", RequestNamespace = "http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace = "http://schemas.microsoft.com/sharepoint/soap/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public System.Xml.XmlNode DeleteContentType(string contentTypeId)
		{
			object[] results = this.Invoke("DeleteContentType", new object[] {
                    contentTypeId});
			return ((System.Xml.XmlNode)(results[0]));
		}

		/// <remarks/>
		public System.IAsyncResult BeginDeleteContentType(string contentTypeId, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("DeleteContentType", new object[] {
                    contentTypeId}, callback, asyncState);
		}

		/// <remarks/>
		public System.Xml.XmlNode EndDeleteContentType(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((System.Xml.XmlNode)(results[0]));
		}

		/// <remarks/>
		public void DeleteContentTypeAsync(string contentTypeId)
		{
			this.DeleteContentTypeAsync(contentTypeId, null);
		}

		/// <remarks/>
		public void DeleteContentTypeAsync(string contentTypeId, object userState)
		{
			if ((this.DeleteContentTypeOperationCompleted == null))
			{
				this.DeleteContentTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteContentTypeOperationCompleted);
			}
			this.InvokeAsync("DeleteContentType", new object[] {
                    contentTypeId}, this.DeleteContentTypeOperationCompleted, userState);
		}

		private void OnDeleteContentTypeOperationCompleted(object arg)
		{
			if ((this.DeleteContentTypeCompleted != null))
			{
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
				this.DeleteContentTypeCompleted(this, new DeleteContentTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/UpdateContentTypeXmlDocument", RequestNamespace = "http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace = "http://schemas.microsoft.com/sharepoint/soap/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public System.Xml.XmlNode UpdateContentTypeXmlDocument(string contentTypeId, System.Xml.XmlNode newDocument)
		{
			object[] results = this.Invoke("UpdateContentTypeXmlDocument", new object[] {
                    contentTypeId,
                    newDocument});
			return ((System.Xml.XmlNode)(results[0]));
		}

		/// <remarks/>
		public System.IAsyncResult BeginUpdateContentTypeXmlDocument(string contentTypeId, System.Xml.XmlNode newDocument, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("UpdateContentTypeXmlDocument", new object[] {
                    contentTypeId,
                    newDocument}, callback, asyncState);
		}

		/// <remarks/>
		public System.Xml.XmlNode EndUpdateContentTypeXmlDocument(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((System.Xml.XmlNode)(results[0]));
		}

		/// <remarks/>
		public void UpdateContentTypeXmlDocumentAsync(string contentTypeId, System.Xml.XmlNode newDocument)
		{
			this.UpdateContentTypeXmlDocumentAsync(contentTypeId, newDocument, null);
		}

		/// <remarks/>
		public void UpdateContentTypeXmlDocumentAsync(string contentTypeId, System.Xml.XmlNode newDocument, object userState)
		{
			if ((this.UpdateContentTypeXmlDocumentOperationCompleted == null))
			{
				this.UpdateContentTypeXmlDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateContentTypeXmlDocumentOperationCompleted);
			}
			this.InvokeAsync("UpdateContentTypeXmlDocument", new object[] {
                    contentTypeId,
                    newDocument}, this.UpdateContentTypeXmlDocumentOperationCompleted, userState);
		}

		private void OnUpdateContentTypeXmlDocumentOperationCompleted(object arg)
		{
			if ((this.UpdateContentTypeXmlDocumentCompleted != null))
			{
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
				this.UpdateContentTypeXmlDocumentCompleted(this, new UpdateContentTypeXmlDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/RemoveContentTypeXmlDocument", RequestNamespace = "http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace = "http://schemas.microsoft.com/sharepoint/soap/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public System.Xml.XmlNode RemoveContentTypeXmlDocument(string contentTypeId, string documentUri)
		{
			object[] results = this.Invoke("RemoveContentTypeXmlDocument", new object[] {
                    contentTypeId,
                    documentUri});
			return ((System.Xml.XmlNode)(results[0]));
		}

		/// <remarks/>
		public System.IAsyncResult BeginRemoveContentTypeXmlDocument(string contentTypeId, string documentUri, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("RemoveContentTypeXmlDocument", new object[] {
                    contentTypeId,
                    documentUri}, callback, asyncState);
		}

		/// <remarks/>
		public System.Xml.XmlNode EndRemoveContentTypeXmlDocument(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((System.Xml.XmlNode)(results[0]));
		}

		/// <remarks/>
		public void RemoveContentTypeXmlDocumentAsync(string contentTypeId, string documentUri)
		{
			this.RemoveContentTypeXmlDocumentAsync(contentTypeId, documentUri, null);
		}

		/// <remarks/>
		public void RemoveContentTypeXmlDocumentAsync(string contentTypeId, string documentUri, object userState)
		{
			if ((this.RemoveContentTypeXmlDocumentOperationCompleted == null))
			{
				this.RemoveContentTypeXmlDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveContentTypeXmlDocumentOperationCompleted);
			}
			this.InvokeAsync("RemoveContentTypeXmlDocument", new object[] {
                    contentTypeId,
                    documentUri}, this.RemoveContentTypeXmlDocumentOperationCompleted, userState);
		}

		private void OnRemoveContentTypeXmlDocumentOperationCompleted(object arg)
		{
			if ((this.RemoveContentTypeXmlDocumentCompleted != null))
			{
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
				this.RemoveContentTypeXmlDocumentCompleted(this, new RemoveContentTypeXmlDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/GetColumns", RequestNamespace = "http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace = "http://schemas.microsoft.com/sharepoint/soap/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public System.Xml.XmlNode GetColumns()
		{
			object[] results = this.Invoke("GetColumns", new object[0]);
			return ((System.Xml.XmlNode)(results[0]));
		}

		/// <remarks/>
		public System.IAsyncResult BeginGetColumns(System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("GetColumns", new object[0], callback, asyncState);
		}

		/// <remarks/>
		public System.Xml.XmlNode EndGetColumns(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((System.Xml.XmlNode)(results[0]));
		}

		/// <remarks/>
		public void GetColumnsAsync()
		{
			this.GetColumnsAsync(null);
		}

		/// <remarks/>
		public void GetColumnsAsync(object userState)
		{
			if ((this.GetColumnsOperationCompleted == null))
			{
				this.GetColumnsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetColumnsOperationCompleted);
			}
			this.InvokeAsync("GetColumns", new object[0], this.GetColumnsOperationCompleted, userState);
		}

		private void OnGetColumnsOperationCompleted(object arg)
		{
			if ((this.GetColumnsCompleted != null))
			{
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
				this.GetColumnsCompleted(this, new GetColumnsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/UpdateColumns", RequestNamespace = "http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace = "http://schemas.microsoft.com/sharepoint/soap/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public System.Xml.XmlNode UpdateColumns(System.Xml.XmlNode newFields, System.Xml.XmlNode updateFields, System.Xml.XmlNode deleteFields)
		{
			object[] results = this.Invoke("UpdateColumns", new object[] {
                    newFields,
                    updateFields,
                    deleteFields});
			return ((System.Xml.XmlNode)(results[0]));
		}

		/// <remarks/>
		public System.IAsyncResult BeginUpdateColumns(System.Xml.XmlNode newFields, System.Xml.XmlNode updateFields, System.Xml.XmlNode deleteFields, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("UpdateColumns", new object[] {
                    newFields,
                    updateFields,
                    deleteFields}, callback, asyncState);
		}

		/// <remarks/>
		public System.Xml.XmlNode EndUpdateColumns(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((System.Xml.XmlNode)(results[0]));
		}

		/// <remarks/>
		public void UpdateColumnsAsync(System.Xml.XmlNode newFields, System.Xml.XmlNode updateFields, System.Xml.XmlNode deleteFields)
		{
			this.UpdateColumnsAsync(newFields, updateFields, deleteFields, null);
		}

		/// <remarks/>
		public void UpdateColumnsAsync(System.Xml.XmlNode newFields, System.Xml.XmlNode updateFields, System.Xml.XmlNode deleteFields, object userState)
		{
			if ((this.UpdateColumnsOperationCompleted == null))
			{
				this.UpdateColumnsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateColumnsOperationCompleted);
			}
			this.InvokeAsync("UpdateColumns", new object[] {
                    newFields,
                    updateFields,
                    deleteFields}, this.UpdateColumnsOperationCompleted, userState);
		}

		private void OnUpdateColumnsOperationCompleted(object arg)
		{
			if ((this.UpdateColumnsCompleted != null))
			{
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
				this.UpdateColumnsCompleted(this, new UpdateColumnsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/GetCustomizedPageStatus", RequestNamespace = "http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace = "http://schemas.microsoft.com/sharepoint/soap/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public CustomizedPageStatus GetCustomizedPageStatus(string fileUrl)
		{
			object[] results = this.Invoke("GetCustomizedPageStatus", new object[] {
                    fileUrl});
			return ((CustomizedPageStatus)(results[0]));
		}

		/// <remarks/>
		public System.IAsyncResult BeginGetCustomizedPageStatus(string fileUrl, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("GetCustomizedPageStatus", new object[] {
                    fileUrl}, callback, asyncState);
		}

		/// <remarks/>
		public CustomizedPageStatus EndGetCustomizedPageStatus(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((CustomizedPageStatus)(results[0]));
		}

		/// <remarks/>
		public void GetCustomizedPageStatusAsync(string fileUrl)
		{
			this.GetCustomizedPageStatusAsync(fileUrl, null);
		}

		/// <remarks/>
		public void GetCustomizedPageStatusAsync(string fileUrl, object userState)
		{
			if ((this.GetCustomizedPageStatusOperationCompleted == null))
			{
				this.GetCustomizedPageStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomizedPageStatusOperationCompleted);
			}
			this.InvokeAsync("GetCustomizedPageStatus", new object[] {
                    fileUrl}, this.GetCustomizedPageStatusOperationCompleted, userState);
		}

		private void OnGetCustomizedPageStatusOperationCompleted(object arg)
		{
			if ((this.GetCustomizedPageStatusCompleted != null))
			{
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
				this.GetCustomizedPageStatusCompleted(this, new GetCustomizedPageStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/RevertFileContentStream", RequestNamespace = "http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace = "http://schemas.microsoft.com/sharepoint/soap/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public void RevertFileContentStream(string fileUrl)
		{
			this.Invoke("RevertFileContentStream", new object[] {
                    fileUrl});
		}

		/// <remarks/>
		public System.IAsyncResult BeginRevertFileContentStream(string fileUrl, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("RevertFileContentStream", new object[] {
                    fileUrl}, callback, asyncState);
		}

		/// <remarks/>
		public void EndRevertFileContentStream(System.IAsyncResult asyncResult)
		{
			this.EndInvoke(asyncResult);
		}

		/// <remarks/>
		public void RevertFileContentStreamAsync(string fileUrl)
		{
			this.RevertFileContentStreamAsync(fileUrl, null);
		}

		/// <remarks/>
		public void RevertFileContentStreamAsync(string fileUrl, object userState)
		{
			if ((this.RevertFileContentStreamOperationCompleted == null))
			{
				this.RevertFileContentStreamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRevertFileContentStreamOperationCompleted);
			}
			this.InvokeAsync("RevertFileContentStream", new object[] {
                    fileUrl}, this.RevertFileContentStreamOperationCompleted, userState);
		}

		private void OnRevertFileContentStreamOperationCompleted(object arg)
		{
			if ((this.RevertFileContentStreamCompleted != null))
			{
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
				this.RevertFileContentStreamCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/RevertAllFileContentStreams", RequestNamespace = "http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace = "http://schemas.microsoft.com/sharepoint/soap/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public void RevertAllFileContentStreams()
		{
			this.Invoke("RevertAllFileContentStreams", new object[0]);
		}

		/// <remarks/>
		public System.IAsyncResult BeginRevertAllFileContentStreams(System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("RevertAllFileContentStreams", new object[0], callback, asyncState);
		}

		/// <remarks/>
		public void EndRevertAllFileContentStreams(System.IAsyncResult asyncResult)
		{
			this.EndInvoke(asyncResult);
		}

		/// <remarks/>
		public void RevertAllFileContentStreamsAsync()
		{
			this.RevertAllFileContentStreamsAsync(null);
		}

		/// <remarks/>
		public void RevertAllFileContentStreamsAsync(object userState)
		{
			if ((this.RevertAllFileContentStreamsOperationCompleted == null))
			{
				this.RevertAllFileContentStreamsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRevertAllFileContentStreamsOperationCompleted);
			}
			this.InvokeAsync("RevertAllFileContentStreams", new object[0], this.RevertAllFileContentStreamsOperationCompleted, userState);
		}

		private void OnRevertAllFileContentStreamsOperationCompleted(object arg)
		{
			if ((this.RevertAllFileContentStreamsCompleted != null))
			{
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
				this.RevertAllFileContentStreamsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/CustomizeCss", RequestNamespace = "http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace = "http://schemas.microsoft.com/sharepoint/soap/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public void CustomizeCss(string cssFile)
		{
			this.Invoke("CustomizeCss", new object[] {
                    cssFile});
		}

		/// <remarks/>
		public System.IAsyncResult BeginCustomizeCss(string cssFile, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("CustomizeCss", new object[] {
                    cssFile}, callback, asyncState);
		}

		/// <remarks/>
		public void EndCustomizeCss(System.IAsyncResult asyncResult)
		{
			this.EndInvoke(asyncResult);
		}

		/// <remarks/>
		public void CustomizeCssAsync(string cssFile)
		{
			this.CustomizeCssAsync(cssFile, null);
		}

		/// <remarks/>
		public void CustomizeCssAsync(string cssFile, object userState)
		{
			if ((this.CustomizeCssOperationCompleted == null))
			{
				this.CustomizeCssOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomizeCssOperationCompleted);
			}
			this.InvokeAsync("CustomizeCss", new object[] {
                    cssFile}, this.CustomizeCssOperationCompleted, userState);
		}

		private void OnCustomizeCssOperationCompleted(object arg)
		{
			if ((this.CustomizeCssCompleted != null))
			{
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
				this.CustomizeCssCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/RevertCss", RequestNamespace = "http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace = "http://schemas.microsoft.com/sharepoint/soap/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public void RevertCss(string cssFile)
		{
			this.Invoke("RevertCss", new object[] {
                    cssFile});
		}

		/// <remarks/>
		public System.IAsyncResult BeginRevertCss(string cssFile, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("RevertCss", new object[] {
                    cssFile}, callback, asyncState);
		}

		/// <remarks/>
		public void EndRevertCss(System.IAsyncResult asyncResult)
		{
			this.EndInvoke(asyncResult);
		}

		/// <remarks/>
		public void RevertCssAsync(string cssFile)
		{
			this.RevertCssAsync(cssFile, null);
		}

		/// <remarks/>
		public void RevertCssAsync(string cssFile, object userState)
		{
			if ((this.RevertCssOperationCompleted == null))
			{
				this.RevertCssOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRevertCssOperationCompleted);
			}
			this.InvokeAsync("RevertCss", new object[] {
                    cssFile}, this.RevertCssOperationCompleted, userState);
		}

		private void OnRevertCssOperationCompleted(object arg)
		{
			if ((this.RevertCssCompleted != null))
			{
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
				this.RevertCssCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/GetActivatedFeatures", RequestNamespace = "http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace = "http://schemas.microsoft.com/sharepoint/soap/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public string GetActivatedFeatures()
		{
			object[] results = this.Invoke("GetActivatedFeatures", new object[0]);
			return ((string)(results[0]));
		}

		/// <remarks/>
		public System.IAsyncResult BeginGetActivatedFeatures(System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("GetActivatedFeatures", new object[0], callback, asyncState);
		}

		/// <remarks/>
		public string EndGetActivatedFeatures(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((string)(results[0]));
		}

		/// <remarks/>
		public void GetActivatedFeaturesAsync()
		{
			this.GetActivatedFeaturesAsync(null);
		}

		/// <remarks/>
		public void GetActivatedFeaturesAsync(object userState)
		{
			if ((this.GetActivatedFeaturesOperationCompleted == null))
			{
				this.GetActivatedFeaturesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetActivatedFeaturesOperationCompleted);
			}
			this.InvokeAsync("GetActivatedFeatures", new object[0], this.GetActivatedFeaturesOperationCompleted, userState);
		}

		private void OnGetActivatedFeaturesOperationCompleted(object arg)
		{
			if ((this.GetActivatedFeaturesCompleted != null))
			{
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
				this.GetActivatedFeaturesCompleted(this, new GetActivatedFeaturesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		public new void CancelAsync(object userState)
		{
			base.CancelAsync(userState);
		}
	}

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	[System.SerializableAttribute()]
	[System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://schemas.microsoft.com/sharepoint/soap/")]
	public enum CustomizedPageStatus
	{

		/// <remarks/>
		None,

		/// <remarks/>
		Uncustomized,

		/// <remarks/>
		Customized,
	}

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	public delegate void GetWebCollectionCompletedEventHandler(object sender, GetWebCollectionCompletedEventArgs e);

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class GetWebCollectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal GetWebCollectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
			:
				base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public System.Xml.XmlNode Result
		{
			get
			{
				this.RaiseExceptionIfNecessary();
				return ((System.Xml.XmlNode)(this.results[0]));
			}
		}
	}

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	public delegate void GetWebCompletedEventHandler(object sender, GetWebCompletedEventArgs e);

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class GetWebCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal GetWebCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
			:
				base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public System.Xml.XmlNode Result
		{
			get
			{
				this.RaiseExceptionIfNecessary();
				return ((System.Xml.XmlNode)(this.results[0]));
			}
		}
	}

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	public delegate void GetListTemplatesCompletedEventHandler(object sender, GetListTemplatesCompletedEventArgs e);

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class GetListTemplatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal GetListTemplatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
			:
				base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public System.Xml.XmlNode Result
		{
			get
			{
				this.RaiseExceptionIfNecessary();
				return ((System.Xml.XmlNode)(this.results[0]));
			}
		}
	}

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	public delegate void GetAllSubWebCollectionCompletedEventHandler(object sender, GetAllSubWebCollectionCompletedEventArgs e);

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class GetAllSubWebCollectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal GetAllSubWebCollectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
			:
				base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public System.Xml.XmlNode Result
		{
			get
			{
				this.RaiseExceptionIfNecessary();
				return ((System.Xml.XmlNode)(this.results[0]));
			}
		}
	}

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	public delegate void WebUrlFromPageUrlCompletedEventHandler(object sender, WebUrlFromPageUrlCompletedEventArgs e);

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class WebUrlFromPageUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal WebUrlFromPageUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
			:
				base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public string Result
		{
			get
			{
				this.RaiseExceptionIfNecessary();
				return ((string)(this.results[0]));
			}
		}
	}

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	public delegate void GetContentTypesCompletedEventHandler(object sender, GetContentTypesCompletedEventArgs e);

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class GetContentTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal GetContentTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
			:
				base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public System.Xml.XmlNode Result
		{
			get
			{
				this.RaiseExceptionIfNecessary();
				return ((System.Xml.XmlNode)(this.results[0]));
			}
		}
	}

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	public delegate void GetContentTypeCompletedEventHandler(object sender, GetContentTypeCompletedEventArgs e);

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class GetContentTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal GetContentTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
			:
				base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public System.Xml.XmlNode Result
		{
			get
			{
				this.RaiseExceptionIfNecessary();
				return ((System.Xml.XmlNode)(this.results[0]));
			}
		}
	}

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	public delegate void CreateContentTypeCompletedEventHandler(object sender, CreateContentTypeCompletedEventArgs e);

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class CreateContentTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal CreateContentTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
			:
				base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public string Result
		{
			get
			{
				this.RaiseExceptionIfNecessary();
				return ((string)(this.results[0]));
			}
		}
	}

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	public delegate void UpdateContentTypeCompletedEventHandler(object sender, UpdateContentTypeCompletedEventArgs e);

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class UpdateContentTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal UpdateContentTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
			:
				base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public System.Xml.XmlNode Result
		{
			get
			{
				this.RaiseExceptionIfNecessary();
				return ((System.Xml.XmlNode)(this.results[0]));
			}
		}
	}

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	public delegate void DeleteContentTypeCompletedEventHandler(object sender, DeleteContentTypeCompletedEventArgs e);

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class DeleteContentTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal DeleteContentTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
			:
				base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public System.Xml.XmlNode Result
		{
			get
			{
				this.RaiseExceptionIfNecessary();
				return ((System.Xml.XmlNode)(this.results[0]));
			}
		}
	}

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	public delegate void UpdateContentTypeXmlDocumentCompletedEventHandler(object sender, UpdateContentTypeXmlDocumentCompletedEventArgs e);

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class UpdateContentTypeXmlDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal UpdateContentTypeXmlDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
			:
				base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public System.Xml.XmlNode Result
		{
			get
			{
				this.RaiseExceptionIfNecessary();
				return ((System.Xml.XmlNode)(this.results[0]));
			}
		}
	}

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	public delegate void RemoveContentTypeXmlDocumentCompletedEventHandler(object sender, RemoveContentTypeXmlDocumentCompletedEventArgs e);

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class RemoveContentTypeXmlDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal RemoveContentTypeXmlDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
			:
				base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public System.Xml.XmlNode Result
		{
			get
			{
				this.RaiseExceptionIfNecessary();
				return ((System.Xml.XmlNode)(this.results[0]));
			}
		}
	}

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	public delegate void GetColumnsCompletedEventHandler(object sender, GetColumnsCompletedEventArgs e);

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class GetColumnsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal GetColumnsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
			:
				base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public System.Xml.XmlNode Result
		{
			get
			{
				this.RaiseExceptionIfNecessary();
				return ((System.Xml.XmlNode)(this.results[0]));
			}
		}
	}

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	public delegate void UpdateColumnsCompletedEventHandler(object sender, UpdateColumnsCompletedEventArgs e);

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class UpdateColumnsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal UpdateColumnsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
			:
				base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public System.Xml.XmlNode Result
		{
			get
			{
				this.RaiseExceptionIfNecessary();
				return ((System.Xml.XmlNode)(this.results[0]));
			}
		}
	}

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	public delegate void GetCustomizedPageStatusCompletedEventHandler(object sender, GetCustomizedPageStatusCompletedEventArgs e);

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class GetCustomizedPageStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal GetCustomizedPageStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
			:
				base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public CustomizedPageStatus Result
		{
			get
			{
				this.RaiseExceptionIfNecessary();
				return ((CustomizedPageStatus)(this.results[0]));
			}
		}
	}

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	public delegate void RevertFileContentStreamCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	public delegate void RevertAllFileContentStreamsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	public delegate void CustomizeCssCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	public delegate void RevertCssCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	public delegate void GetActivatedFeaturesCompletedEventHandler(object sender, GetActivatedFeaturesCompletedEventArgs e);

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class GetActivatedFeaturesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal GetActivatedFeaturesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
			:
				base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public string Result
		{
			get
			{
				this.RaiseExceptionIfNecessary();
				return ((string)(this.results[0]));
			}
		}
	}
}